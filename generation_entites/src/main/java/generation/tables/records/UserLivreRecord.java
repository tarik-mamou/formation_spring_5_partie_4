/*
 * This file is generated by jOOQ.
 */
package generation.tables.records;


import generation.tables.UserLivre;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLivreRecord extends TableRecordImpl<UserLivreRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_livre.id_livre</code>.
     */
    public void setIdLivre(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_livre.id_livre</code>.
     */
    public Integer getIdLivre() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_livre.id_user</code>.
     */
    public void setIdUser(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_livre.id_user</code>.
     */
    public Integer getIdUser() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserLivre.USER_LIVRE.ID_LIVRE;
    }

    @Override
    public Field<Integer> field2() {
        return UserLivre.USER_LIVRE.ID_USER;
    }

    @Override
    public Integer component1() {
        return getIdLivre();
    }

    @Override
    public Integer component2() {
        return getIdUser();
    }

    @Override
    public Integer value1() {
        return getIdLivre();
    }

    @Override
    public Integer value2() {
        return getIdUser();
    }

    @Override
    public UserLivreRecord value1(Integer value) {
        setIdLivre(value);
        return this;
    }

    @Override
    public UserLivreRecord value2(Integer value) {
        setIdUser(value);
        return this;
    }

    @Override
    public UserLivreRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserLivreRecord
     */
    public UserLivreRecord() {
        super(UserLivre.USER_LIVRE);
    }

    /**
     * Create a detached, initialised UserLivreRecord
     */
    public UserLivreRecord(Integer idLivre, Integer idUser) {
        super(UserLivre.USER_LIVRE);

        setIdLivre(idLivre);
        setIdUser(idUser);
    }
}
