/*
 * This file is generated by jOOQ.
 */
package generation.tables.records;


import generation.tables.Profil;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfilRecord extends UpdatableRecordImpl<ProfilRecord> implements Record3<Integer, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.profil.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.profil.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.profil.date_publication</code>.
     */
    public void setDatePublication(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.profil.date_publication</code>.
     */
    public LocalDate getDatePublication() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.profil.genre</code>.
     */
    public void setGenre(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.profil.genre</code>.
     */
    public String getGenre() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Profil.PROFIL.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Profil.PROFIL.DATE_PUBLICATION;
    }

    @Override
    public Field<String> field3() {
        return Profil.PROFIL.GENRE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDatePublication();
    }

    @Override
    public String component3() {
        return getGenre();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDatePublication();
    }

    @Override
    public String value3() {
        return getGenre();
    }

    @Override
    public ProfilRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProfilRecord value2(LocalDate value) {
        setDatePublication(value);
        return this;
    }

    @Override
    public ProfilRecord value3(String value) {
        setGenre(value);
        return this;
    }

    @Override
    public ProfilRecord values(Integer value1, LocalDate value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfilRecord
     */
    public ProfilRecord() {
        super(Profil.PROFIL);
    }

    /**
     * Create a detached, initialised ProfilRecord
     */
    public ProfilRecord(Integer id, LocalDate datePublication, String genre) {
        super(Profil.PROFIL);

        setId(id);
        setDatePublication(datePublication);
        setGenre(genre);
    }
}
